@using Project_1.Models
@using Project_1.Models.TipoDocId
@using Project_1.Models.Coneptos_De_Cobro
@using Roles = Project_1.Models.Authentication.Roles
@model Project_1.ViewModels.Propiedad.PropiedadDetailViewModel
@{
    ViewBag.Title = "Detail";
}

<!--INFO-->
<div class="jumbotron propiedad-info">
    <h3 class="display-4">Numero de Finca: @Model.propiedad.numeroFinca</h3>
    <h4>Valor: <span class="badge badge-info">$@Model.propiedad.valor</span></h4>
    <hr class="my-4">
    <h4>Dirección: <span class="badge badge-info">@Model.propiedad.direccion</span></h4>
    <p class="lead">

        @if (User.Identity.IsAuthenticated && @CurrentUser.Role == Roles.administrador)
        {
            <button class="btn btn-sm btn-dark" role="button">
                @Html.ActionLink(
                     "Actualizar",
                     "UpdateRedirect",
                     "Propiedad",
                     new { @Model.propiedad.numeroFinca },
                     new { @class = "text-white" })
                <ion-icon name="arrow-up-outline"></ion-icon>
            </button>

            <!-- Agregar concepto de cobro en propiedad -->
            <button class="agregar-CC btn btn-sm btn-dark" role="button">
                <a href="#agregar-CC-form" class="text-white">
                    Agregar Concepto de Cobro
                    <ion-icon name="arrow-up-outline"></ion-icon>
                </a>
            </button>

            <!-- Agregar Concepto de Cobro-->
            <div class="agregar-CC-form my-5" style="display: none">

                <h3 class="my-4">Agregar Concepto de Cobro</h3>

                <div class="warning-message alert alert-danger alert-dismissible fade show" role="alert">
                    <strong>Cuidado!</strong>
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">

                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="successful-message alert alert-success alert-dismissible fade show" role="alert">
                    <strong>Realizado,</strong>
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">

                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>


                <div class="input-group mb-3" readonly>
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="basic-addon1">@Html.LabelFor(m => m.propiedad.numeroFinca)</span>
                    </div>
                    @Html.TextBoxFor(m => m.propiedad.numeroFinca, new { @Value = @Model.propiedad.numeroFinca, @class = "form-control", aria_describedby = "basic-addon1" })
                    @Html.ValidationMessageFor(m => m.propiedad.numeroFinca)
                </div>

                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="basic-addon1"> @Html.LabelFor(m => m.CC_En_Propiedad.nombreCC)</span>
                    </div>
                    @Html.TextBoxFor(m => m.CC_En_Propiedad.nombreCC, new { @class = "form-control", placeholder = "Nombre Concepto Cobro", aria_describedby = "basic-addon1" })
                    @Html.ValidationMessageFor(m => m.CC_En_Propiedad.nombreCC)
                </div>
                <button type="submit" class="btn-agregar-CC btn btn-primary" id="button-addon2">Agregar</button>
            </div>
        }

    </p>
</div>

<!--PROPIETARIOS-->
<div>
    @if (Model.propietarios.Any() == true)
    {
        <div>
            <h3 class="my-4">Propietarios</h3>
            <table id="propietario-table" class="table table-hover" style="table-layout: fixed">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Nombre</th>
                        <th scope="col">Documento</th>
                        <th scope="col">Tipo de Documento</th>
                        @if (User.Identity.IsAuthenticated && @CurrentUser.Role == Roles.administrador)
                        {
                            <th>Ver</th>
                            <th>Actualizar</th>
                            <th>Despropiar</th>
                        }
                    </tr>
                </thead>
                @foreach (var propietario in Model.propietarios)
                {
                    <tr>
                        <th>@propietario.nombre</th>
                        <td>@propietario.valorDocId</td>
                        <td>@propietario.nombreDocId</td>

                        @if (User.Identity.IsAuthenticated && @CurrentUser.Role == Roles.administrador)
                        {
                            <td><a href="~/Propietario/Detail/@propietario.valorDocId"><ion-icon name="person" class="js-detail btn btn-outline-success"></ion-icon></a></td>
                            <td><a href="~/Propietario/UpdateRedirect/@propietario.valorDocId"><ion-icon name="arrow-up-circle-outline" class="js-update btn btn-outline-success"></ion-icon></a></td>
                            <td><ion-icon propietario-data=@propietario.valorDocId name="thumbs-down-outline" class="js-delete-propietario btn btn-outline-danger"></ion-icon></td>
                        }
                    </tr>
                }
            </table>
        </div>
    }
    else
    {
        <h3 class="my-4">No hay propietarios</h3>
    }
</div>

<!--CONCEPTOS DE COBRO-->
<div id="conceptos_cobro">
    <!--CC_FIjo-->

    @if (Model.CC_Fijo.Any())
    {
        <div>
            <h3 class="my-4">Conceptos de Cobro Fijo</h3>
            <table id="propietario-table" class="table table-hover" style="table-layout: fixed">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Nombre</th>
                        <th scope="col">Intereses</th>
                        <th scope="col">Día cobro</th>
                        <th scope="col">Día vencimiento</th>
                        <th scope="col">Es fijo</th>
                        <th scope="col">Es recurrente</th>
                        <th scope="col">Monto</th>
                        <th scope="col">Recibos</th>
                        @if (User.Identity.IsAuthenticated && @CurrentUser.Role == Roles.administrador)
                        {
                            <th>Cancelar</th>
                        }
                    </tr>
                </thead>
                @foreach (var concepto in Model.CC_Fijo)
                {
                    <tr>
                        <td>@concepto.nombreCC</td>
                        <td>@concepto.interesesMoratorios</td>
                        <td>@concepto.diaCobro</td>
                        <td>@concepto.diasVencidos</td>
                        <td>@concepto.esFijo</td>
                        <td>@concepto.esRecurrente</td>
                        <td>@concepto.monto</td>
                        <td><a href="~/Recibo/@Model.propiedad.numeroFinca/@concepto.nombreCC/"><ion-icon name="receipt-outline" class="btn btn-outline-success"></ion-icon></a></td>
                        @if (User.Identity.IsAuthenticated && @CurrentUser.Role == Roles.administrador)
                        {
                            <td><ion-icon name="thumbs-down-outline" CC-data="@concepto.nombreCC" class="js-delete-CC btn btn-outline-danger"></ion-icon></td>
                        }
                    </tr>
                }
            </table>
        </div>
    }

    <!--CC_Consumo-->

    @if (Model.CC_Consumo.Any())
    {
        <div>
            <h3 class="my-4">Conceptos de Cobro Consumo</h3>
            <table id="propietario-table" class="table table-hover" style="table-layout: fixed">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Nombre</th>
                        <th scope="col">Intereses</th>
                        <th scope="col">Día cobro</th>
                        <th scope="col">Día vencimiento</th>
                        <th scope="col">Es fijo</th>
                        <th scope="col">Es recurrente</th>
                        <th scope="col">Monto</th>
                        <th scope="col">Recibos</th>

                        @if (User.Identity.IsAuthenticated && @CurrentUser.Role == Roles.administrador)
                        {
                            <th>Cancelar</th>
                        }
                    </tr>
                </thead>
                @foreach (var concepto in Model.CC_Consumo)
                {
                    <tr>
                        <td>@concepto.nombreCC</td>
                        <td>@concepto.interesesMoratorios</td>
                        <td>@concepto.diaCobro</td>
                        <td>@concepto.diasVencidos</td>
                        <td>@concepto.esFijo</td>
                        <td>@concepto.esRecurrente</td>
                        <td>@concepto.monto</td>
                        <td><a href="~/Recibo/@Model.propiedad.numeroFinca/@concepto.nombreCC/"><ion-icon name="receipt-outline" class="btn btn-outline-success"></ion-icon></a></td>

                        @if (User.Identity.IsAuthenticated && @CurrentUser.Role == Roles.administrador)
                        {
                            <td><ion-icon CC-data="@concepto.nombreCC" name="thumbs-down-outline" class="js-delete-CC btn btn-outline-danger"></ion-icon></td>
                        }

                    </tr>
                }
            </table>
        </div>
    }


    <!--CC_Intereses_Moratorios-->


    @if (Model.CC_Intereses_Moratiorios.Any())
    {
        <div>
            <h3 class="my-4">Conceptos de Cobro Intereses_Moratorios</h3>
            <table id="propietario-table" class="table table-hover" style="table-layout: fixed">
                <thead class="thead-dark">
                    <tr>
                        <!-- <th scope="col">Fecha Incio</th>-->
                        <th scope="col">Nombre</th>
                        <th scope="col">Intereses</th>
                        <th scope="col">Día cobro</th>
                        <th scope="col">Día vencimiento</th>
                        <th scope="col">Es fijo</th>
                        <th scope="col">Es recurrente</th>
                        <th scope="col">Recibos</th>

                        @if (User.Identity.IsAuthenticated && @CurrentUser.Role == Roles.administrador)
                        {
                            <th>Cancelar</th>
                        }
                    </tr>
                </thead>
                @foreach (var concepto in Model.CC_Intereses_Moratiorios)
                {
                    <tr>
                        <td>@concepto.nombreCC</td>
                        <td>@concepto.interesesMoratorios</td>
                        <td>@concepto.diaCobro</td>
                        <td>@concepto.diasVencidos</td>
                        <td>@concepto.esFijo</td>
                        <td>@concepto.esRecurrente</td>
                        <td><a href="~/Recibo/@Model.propiedad.numeroFinca/@concepto.nombreCC/"><ion-icon name="receipt-outline" class="btn btn-outline-success"></ion-icon></a></td>

                        @if (User.Identity.IsAuthenticated && @CurrentUser.Role == Roles.administrador)
                        {
                            <td><ion-icon name="thumbs-down-outline" CC-data="@concepto.nombreCC" class="js-delete-CC btn btn-outline-danger"></ion-icon></td>
                        }

                    </tr>
                }
            </table>
        </div>
    }

    <!--CC_Porcentual-->
    @if (Model.CC_Porcentaje.Any())
    {
        <div>
            <h3 class="my-4">Conceptos de Cobro Porcentual</h3>
            <table id="propietario-table" class="table table-hover" style="table-layout: fixed">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Nombre</th>
                        <th scope="col">Intereses</th>
                        <th scope="col">Día cobro</th>
                        <th scope="col">Día vencimiento</th>
                        <th scope="col">Es fijo</th>
                        <th scope="col">Es recurrente</th>
                        <th scope="col">Porcentaje</th>
                        <th scope="col">Recibos</th>

                        @if (User.Identity.IsAuthenticated && @CurrentUser.Role == Roles.administrador)
                        {
                            <th>Cancelar</th>
                        }
                    </tr>
                </thead>
                @foreach (var concepto in Model.CC_Porcentaje)
                {
                    <tr>
                        <td>@concepto.nombreCC</td>
                        <td>@concepto.interesesMoratorios</td>
                        <td>@concepto.diaCobro</td>
                        <td>@concepto.diasVencidos</td>
                        <td>@concepto.esFijo</td>
                        <td>@concepto.esRecurrente</td>
                        <td>@concepto.porcentaje</td>
                        <td><a href="~/Recibo/@Model.propiedad.numeroFinca/@concepto.nombreCC/"><ion-icon name="receipt-outline" class="btn btn-outline-success"></ion-icon></a></td>

                        <!--ADMINISTRADOR-->
                        @if (User.Identity.IsAuthenticated && @CurrentUser.Role == Roles.administrador)
                        {
                            <td><ion-icon name="thumbs-down-outline" CC-data="@concepto.nombreCC" class="js-delete-CC btn btn-outline-danger"></ion-icon></td>
                        }

                    </tr>
                }
            </table>
        </div>
    }

</div>

<!-- AP De propiedad -->
<div>
    @if (Model.APs.Any())
    {
        <div>
            <h3 class="my-4">Arreglos de pago</h3>
            <table class="table table-hover" style="table-layout: fixed">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Monto</th>
                        <th scope="col">Saldo</th>
                        <th scope="col">Tasa interes</th>
                        <th scope="col">Plazo</th>
                        <th scope="col">Meses pagados</th>
                        <th scope="col">Cuota</th>
                        <th scope="col">Fecha creación</th>
                        <th>Ver comprobante</th>
                        <th>Ver movimientos</th>
                    </tr>
                </thead>
                @foreach (var ap in Model.APs)
                {
                    <tr>
                        <td>@ap.montoOriginal</td>
                        <td>@ap.saldo</td>
                        <td>@ap.tasaInteres</td>
                        <td>@ap.plazoOriginal</td>
                        <td>@ap.plazoResta</td>
                        <td>@ap.cuota</td>
                        <td>@ap.insertedAt.ToShortDateString()</td>
                        <td>
                            <a href="~/Recibo/RecibosPorComprobante/@ap.idComprobante/@ap.insertedAt.ToShortDateString()/@Model.propiedad.numeroFinca/@ap.totalRecibos/">
                                <ion-icon name="receipt-outline" class="btn btn-outline-success"></ion-icon>
                            </a>
                        </td>
                        <td>
                            <a href="~/AP/@ap.id/@Model.propiedad.numeroFinca">
                                <ion-icon name="receipt-outline" class="btn btn-outline-success"></ion-icon>
                            </a>
                        </td>
                    </tr>
                }
            </table>
        </div>
    }
</div>

<!--RECIBOS PENDIENTES -->
<div id="recibos-pendientes" class="my-3">
    @if (Model.recibos.recibosPendientes.Any())
    {
        <div class="d-flex">
            <h3 class="my-4">
                Recibos Pendientes
            </h3>
        </div>
        <table id="recibos-pendientes-table" class="table table-hover" style="table-layout: fixed">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Concepto</th>
                    <th scope="col">Monto</th>
                    <th scope="col">Fecha</th>
                    <th scope="col">Fecha vencimiento</th>
                    <th scope="col">Pagar</th>

                </tr>
            </thead>
            @{

                int prioridad = 1;
                foreach (var reciboPendiente in Model.recibos.recibosPendientes)
                {
                    <tr>
                        <th>@reciboPendiente.nombreConceptoCobro</th>
                        <th>@reciboPendiente.monto</th>
                        <td>@reciboPendiente.fecha.ToShortDateString()</td>
                        <td>@reciboPendiente.fechaVencimiento.ToShortDateString()</td>
                        <td prioridad="@prioridad" reciboId="@reciboPendiente.id">@Html.CheckBox("Pagar", false)</td>
                    </tr>

                    prioridad++;

                }
            }

        </table>

        <button class="btn btn-danger pagar-recibos my-3 align-self-center">Pagar Recibos</button>

        <button class="btn btn-danger procesar-AP my-3 align-self-center">Procesar AP</button>

        <input class="meses-input input-group-lg" type="number" id="quantity" name="quantity" min="1" max="100">




    }
    else
    {
        <h3 class="my-4" style="text-decoration:line-through;">No hay recibos pendientes</h3>
    }

    <hr class="my-4">
</div>

<!--RECIBOS PAGADOS-->
<div>
    @if (Model.recibos.recibosPagados.Any())
    {
        <h3 class="my-4">Recibos Pagados</h3>
        <table id="" class="table table-hover" style="table-layout: fixed">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Concepto</th>
                    <th scope="col">Monto</th>
                    <th scope="col">Fecha</th>
                    <th scope="col">Fecha vencimiento</th>

                </tr>
            </thead>
            @foreach (var reciboPagado in Model.recibos.recibosPagados)
            {
                <tr>
                    <th>@reciboPagado.nombreConceptoCobro</th>
                    <th>@reciboPagado.monto</th>
                    <td>@reciboPagado.fecha.ToShortDateString()</td>
                    <td>@reciboPagado.fechaVencimiento.ToShortDateString()</td>
                </tr>
            }
        </table>
    }
    else
    {
        <h3 class="my-4">No hay recibos pagados</h3>
    }

    <hr class="my-4">
</div>


<!--Usuarios Suscritos-->
@if (User.Identity.IsAuthenticated && @CurrentUser.Role == Roles.administrador)
{
    if (@Model.usuarios.Any())
    {
        <div>
            <h3 class="my-4">Usuarios Suscritos</h3>
            <table id="usuario-table" class="table table-hover" style="table-layout: fixed">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Nombre</th>
                        <th scope="col">Tipo de usuario</th>
                        <th>Ver</th>
                        <th>Desuscribir</th>
                    </tr>
                </thead>
                @foreach (var usuario in Model.usuarios)
                {
                    <tr>
                        <th>@usuario.nombre</th>
                        <td>@usuario.tipoUsuario</td>
                        <td><a href="~/Usuario/Detail/@usuario.nombre"><ion-icon name="person" class="js-detail btn btn-outline-success"></ion-icon></a></td>
                        <td><ion-icon usuario-data=@usuario.nombre name="thumbs-down-outline" class="js-delete-usuario btn btn-outline-danger"></ion-icon></td>
                    </tr>
                }
            </table>
        </div>
    }
    else
    {
        <h3 class="my-4">No hay usuarios suscritos</h3>
    }
}






@section scripts{

    <!--SCRIPTS ADMINISTRADOR-->
    @if (User.Identity.IsAuthenticated && @CurrentUser.Role == Roles.administrador)
    {
        <script>
    //ADMINISTRADOR
    $(document).ready(function () {

        //Delete propietario Button
        $("#propietario-table").on("click", ".js-delete-propietario",
            function() {
                var deleteButton = $(this);

                bootbox.confirm({
                    message: "¿Desea despropiar a #" +deleteButton.attr("propietario-data") + " de esta propiedad?",
                    buttons: {
                        confirm: {
                            label: 'Sí',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger'
                        }
                    },
                    callback: function(result) {
                        if (result) {
                            $.ajax({
                                method: "POST",
                                url: '@Url.Content("~/PropiedadDelPropietario/Despropiar/")'+ @Model.propiedad.numeroFinca +"/"+ deleteButton.attr("propietario-data"),
                                success: function () {
                                    deleteButton.parents("tr").remove();
                                }
                            });
                        }
                    }
                });

			});


		//Agregar Concepto de Cobro
		var warningDiv = $("div.warning-message");
        var successfulDiv = $("div.successful-message");

        $(".propiedad-info").on("click", ".agregar-CC",
            function() {
                $("div.agregar-CC-form").show();
                warningDiv.hide();
                successfulDiv.hide();
            });

		$(".agregar-CC-form").on("click", ".btn-agregar-CC",
			function () {

				console.log($("#CC_En_Propiedad_nombreCC").val() + " " + $("#propiedad_numeroFinca").val());
				if ($("#CC_En_Propiedad_nombreCC").val() &&
					$("#propiedad_numeroFinca").val()) {

                    $.ajax({
                        method: "POST",
                        url: '@Url.Content("~/CCEnPropiedad/Insert/")' +
							$("#propiedad_numeroFinca").val() +
                            "/" +
							$("#CC_En_Propiedad_nombreCC").val(),
                        success: function (retval) {
							if (retval == "Concepto de cobro agregado!") {
                                warningDiv.hide();
                                successfulDiv.show();
                                successfulDiv.append(retval);
                            } else {
                                successfulDiv.hide();
                                warningDiv.show();
                                warningDiv.append(retval);
                            }

                        }
                    });


				}
				else {

                    successfulDiv.hide();
                    warningDiv.show();
                    warningDiv.append("Todos los campos son obligatiorios!");

                }

            });


        //Delete usuario suscrito
        $("#usuario-table").on("click", ".js-delete-usuario",
            function() {
                var deleteButton = $(this);
                var usuarioNombre = deleteButton.attr("usuario-data");

                bootbox.confirm({
                    message: "¿Desea desuscribir a " + usuarioNombre + " de esta propiedad?",
                    buttons: {
                        confirm: {
                            label: 'Sí',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger'
                        }
                    },
                    callback: function(result) {
                        if (result) {
                            $.ajax({
                                method: "POST",
                                url: '@Url.Content("~/UsuarioDePropiedad/DesuscribirPropiedad/")' + usuarioNombre  + "/" + "@Model.propiedad.numeroFinca",
                                success: function() {
                                    deleteButton.parents("tr").remove();
                                }
                            });
                        }
                    }
                });

            });


        //Delete Concepto Cobro en propiedad
		$("#conceptos_cobro").on("click", ".js-delete-CC",
            function() {
                var deleteButton = $(this);
                var nombreCC = deleteButton.attr("CC-data");

                bootbox.confirm({
                    message: "¿Desea eliminar el concepto de cobro " + nombreCC + " de esta propiedad?",
                    buttons: {
                        confirm: {
                            label: 'Sí',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger'
                        }
                    },
                    callback: function(result) {
                        if (result) {
                            $.ajax({
                                method: "POST",
                                url: '@Url.Content("~/CCEnPropiedad/Delete/")' + @Model.propiedad.numeroFinca  + "/" + nombreCC,
                                success: function() {
                                    deleteButton.parents("tr").remove();
                                }
                            });
                        }
                    }
                });

            });

    });
        </script>
    }

    <script>
        //PAGO DE RECIBOS
        $(document).ready(function () {

            //Pago recibos
            $("#recibos-pendientes").on("click", ".pagar-recibos",
                function () {
                    var prioridadAnterior = 0;
                    var idsRecibos = [];
                    var recibosEnOrden = true
                    $('#recibos-pendientes-table input:checked').each(function () {
                        var element = $(this).parent();
                        var prioridad = element.attr("prioridad");
                        var id = element.attr("reciboId");

                        if (prioridadAnterior == prioridad - 1) {
                            prioridadAnterior = prioridad;
                            idsRecibos.push(id);
                        }
                        else {
                            recibosEnOrden = false;
                        }

                    });

                    if (recibosEnOrden && idsRecibos.length !== 0) {
                        console.log("Correcto");
                        $.get('/Recibo/MostrarRecibos', $.param({ idsRecibos: idsRecibos }, true), function (markup) {

                            //Muestra los montos de los recibos más los interessees moratorios

                            var dialog = bootbox.dialog({
                                message: markup,
                                size: 'large',
                                buttons: {
                                    cancel: {
                                        label: "Cancelar!",
                                        className: 'btn-danger',
                                        callback: function () {

                                            $.post('/Recibo/CancelarPagoRecibos', true);
                                        }
                                    },
                                    ok: {
                                        label: "Procesar pago",
                                        className: 'btn-info',
                                        callback: function () {

                                            //Paga los recibos
                                            $.post('/Recibo/PagarRecibos', $.param({ idsRecibos: idsRecibos }, true));

                                        }
                                    }
                                }
                            });





                        });
                    }
                    else {
                        bootbox.alert("No pueden haber recibos intermedios sin pagar!");
                        J
                    }

                });


            //PROCESAR AP
            $("#recibos-pendientes").on("click", ".procesar-AP",
                function () {
                    var prioridadAnterior = 0;
                    var idsRecibos = [];
                    var recibosEnOrden = true
                    var meses = $('.meses-input').val();

                    $('#recibos-pendientes-table input:checked').each(function () {
                        var element = $(this).parent();
                        var prioridad = element.attr("prioridad");
                        var id = element.attr("reciboId");

                        if (prioridadAnterior == prioridad - 1) {
                            prioridadAnterior = prioridad;
                            idsRecibos.push(id);
                        }
                        else {
                            recibosEnOrden = false;
                        }

                    });

                    if (recibosEnOrden && idsRecibos.length !== 0) {
                        console.log("Correcto");
                        $.post('/AP/MostrarAP', $.param({ idsRecibos: idsRecibos, numeroFinca: @Model.propiedad.numeroFinca, meses: meses }, true), function (markup) {

                            //Muestra los montos de los recibos más los interessees moratorios

                            var dialog = bootbox.dialog({
                                message: markup,
                                size: 'large',
                                buttons: {
                                    cancel: {
                                        label: "Cancelar!",
                                        className: 'btn-danger',
                                        callback: function () {
                                            $.post('/Recibo/CancelarPagoRecibos', true);
                                        }
                                    },
                                    ok: {
                                        label: "Crear Arreglo de pago",
                                        className: 'btn-info',
                                        callback: function () {

                                            //Crea el AP
                                            console.log("A crear");
                                            $.post('/AP/CrearAP', $.param({ idsRecibos: idsRecibos, numeroFinca: @Model.propiedad.numeroFinca, meses: meses }, true));
                                            console.log("Creado");

                                        }
                                    }
                                }
                            });

                        });
                    }
                    else {
                        bootbox.alert("No pueden haber recibos intermedios sin pagar!");
                    
                    }
                });

        });


    </script>
}
